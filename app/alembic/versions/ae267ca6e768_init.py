"""init

Revision ID: ae267ca6e768
Revises: 
Create Date: 2023-11-17 18:11:01.066111

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm

import models


# revision identifiers, used by Alembic.
revision: str = 'ae267ca6e768'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('brand_name', sa.String(), nullable=True),
    sa.Column('brand_url', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('retail_price', sa.DECIMAL(), nullable=True),
    sa.Column('price', sa.DECIMAL(), nullable=False),
    sa.Column('discount', sa.DECIMAL(), nullable=True),
    sa.Column('image', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_id'), 'product', ['id'], unique=False)
    op.create_index(op.f('ix_product_name'), 'product', ['name'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.Column('session_token', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_type', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('campaign',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('pick_up_time', sa.DateTime(), nullable=True),
    sa.Column('return_time', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_campaign_id'), 'campaign', ['id'], unique=False)
    op.create_index(op.f('ix_campaign_key'), 'campaign', ['key'], unique=False)
    op.create_table('order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.DECIMAL(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PAID', 'CANCELLED', 'REFUNDED', name='status_enum'), nullable=False),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaign.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_id'), 'order', ['id'], unique=False)
    # ### end Alembic commands ###
    
    bind = op.get_bind()
    session = orm.Session(bind=bind)
    test_admin_first = models.User(
        name="Test Admin", 
        email="szuhan.eng@gmail.com",
        image="https://images.unsplash.com/photo-1568605117036-5fe5e7bab0b7?auto=format&fit=crop&q=80&w=1740&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D", 
        source='GOOGLE',
        is_active=True, 
        user_type="ADMIN",
        role="ADMIN"
    )
    test_user_first = models.User(
        name="Test User", 
        email="hank.likes.matcha@gmail.com",
        image="https://images.unsplash.com/photo-1568605117036-5fe5e7bab0b7?auto=format&fit=crop&q=80&w=1740&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D", 
        source='GOOGLE',
        is_active=True, 
        user_type="CONSUMER",
        role="USER"
    )
    test_product_first = models.Product(
        name="250g MGO 83+ Monofloral Manuka Honey", 
        brand_name="Kore New Zealand",
        brand_url="https://korenewzealand.com/",
        retail_price=35.00,
        description="Discover the unique taste and remarkable benefits of KORE™ MGO 83+ Manuka Honey, a natural treasure straight from the pristine landscapes of Northland, New Zealand. Each spoonful of this golden nectar is a testament to the power of Manuka, offering a rich, earthy flavor that’s unlike any other honey you’ve tasted before. KORE™ Manuka honey is not just a sweet treat, but a wellness powerhouse. With an MGO rating of 83+, it’s balanced perfectly with Methylglyoxal, the compound responsible for Manuka honey’s celebrated antibacterial properties. This rating also corresponds to the well known grading of UMF 5+, a measure of the unique compounds naturally occurring in Manuka honey that contribute to its unique properties.",
        price=30.00,
        discount=5.00,
        image="https://images.unsplash.com/photo-1618897996318-5a901fa6ca71?auto=format&fit=crop&q=80&w=1664&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
    )
    test_campaign_first = models.Campaign(
        name="Kore first campaign", 
        key="kore-honey",
        description="Campaign for Kore",
        is_active=True,
        start_date="2023-11-05 00:00:00",
        end_date="2023-12-30 00:00:00",
        product=test_product_first,
        owner=test_user_first,
        return_time=7,
        pick_up_time="2023-12-31 00:00:00"
    )
    test_order_first = models.Order(
        owner=test_user_first,
        product=test_product_first,
        campaign=test_campaign_first,
        quantity=1,
        total_price=test_product_first.price * 1
    )
    test_order_second = models.Order(
        owner=test_user_first,
        product=test_product_first,
        campaign=test_campaign_first,
        quantity=1,
        total_price=test_product_first.price * 1
    )
    session.add(test_admin_first)
    session.add(test_user_first)
    session.add(test_product_first)
    session.add(test_campaign_first)
    session.add(test_order_first)
    session.add(test_order_second)
    session.commit()


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_order_id'), table_name='order')
    op.drop_table('order')
    op.drop_index(op.f('ix_campaign_key'), table_name='campaign')
    op.drop_index(op.f('ix_campaign_id'), table_name='campaign')
    op.drop_table('campaign')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_product_name'), table_name='product')
    op.drop_index(op.f('ix_product_id'), table_name='product')
    op.drop_table('product')
    op.execute("DROP TYPE IF EXISTS status_enum;")

    # ### end Alembic commands ###
